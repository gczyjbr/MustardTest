<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lsh.mustardtest.mapper.WareHouseMapper">
    <resultMap id="BaseResultMap" type="com.lsh.mustardtest.pojo.WareHouse">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="tiny_stock" jdbcType="INTEGER" property="tiny_stock"/>
        <result column="small_stock" jdbcType="INTEGER" property="small_stock"/>
        <result column="middle_stock" jdbcType="INTEGER" property="middle_stock"/>
        <result column="big_stock" jdbcType="INTEGER" property="big_stock"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, name, address, tiny_stock, small_stock, middle_stock, big_stock
  </sql>
    <select id="selectByExample" parameterType="com.lsh.mustardtest.pojo.WareHouseExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'false' as QUERYID,
        <include refid="Base_Column_List"/>
        from warehouse
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from warehouse
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from warehouse
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.lsh.mustardtest.pojo.WareHouse"
            useGeneratedKeys="true">
    insert into warehouse (name, address, tiny_stock, 
      small_stock, middle_stock, big_stock
      )
    values (#{name,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{tiny_stock,jdbcType=INTEGER}, 
      #{small_stock,jdbcType=INTEGER}, #{middle_stock,jdbcType=INTEGER}, #{big_stock,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.lsh.mustardtest.pojo.WareHouse"
            useGeneratedKeys="true">
        insert into warehouse
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                name,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="tiny_stock != null">
                tiny_stock,
            </if>
            <if test="small_stock != null">
                small_stock,
            </if>
            <if test="middle_stock != null">
                middle_stock,
            </if>
            <if test="big_stock != null">
                big_stock,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="tiny_stock != null">
                #{tiny_stock,jdbcType=INTEGER},
            </if>
            <if test="small_stock != null">
                #{small_stock,jdbcType=INTEGER},
            </if>
            <if test="middle_stock != null">
                #{middle_stock,jdbcType=INTEGER},
            </if>
            <if test="big_stock != null">
                #{big_stock,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.lsh.mustardtest.pojo.WareHouse">
        update warehouse
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="tiny_stock != null">
                tiny_stock = #{tiny_stock,jdbcType=INTEGER},
            </if>
            <if test="small_stock != null">
                small_stock = #{small_stock,jdbcType=INTEGER},
            </if>
            <if test="middle_stock != null">
                middle_stock = #{middle_stock,jdbcType=INTEGER},
            </if>
            <if test="big_stock != null">
                big_stock = #{big_stock,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.lsh.mustardtest.pojo.WareHouse">
    update warehouse
    set name = #{name,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      tiny_stock = #{tiny_stock,jdbcType=INTEGER},
      small_stock = #{small_stock,jdbcType=INTEGER},
      middle_stock = #{middle_stock,jdbcType=INTEGER},
      big_stock = #{big_stock,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>