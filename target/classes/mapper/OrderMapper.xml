<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lsh.mustardtest.mapper.OrderMapper">
  <resultMap id="BaseResultMap" type="com.lsh.mustardtest.pojo.Order">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="orderCode" jdbcType="VARCHAR" property="orderCode" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="post" jdbcType="INTEGER" property="post" />
    <result column="sender" jdbcType="VARCHAR" property="sender" />
    <result column="userMessage" jdbcType="VARCHAR" property="userMessage" />
    <result column="createDate" jdbcType="TIMESTAMP" property="createDate" />
    <result column="payDate" jdbcType="TIMESTAMP" property="payDate" />
    <result column="deliveryDate" jdbcType="TIMESTAMP" property="deliveryDate" />
    <result column="confirmDate" jdbcType="TIMESTAMP" property="confirmDate" />
    <result column="endDate" jdbcType="TIMESTAMP" property="endDate" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="duration" jdbcType="INTEGER" property="duration" />
    <result column="userID" jdbcType="INTEGER" property="userID" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.lsh.mustardtest.pojo.Order">
    <result column="mobile" jdbcType="LONGVARCHAR" property="mobile" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, orderCode, address, post, sender, userMessage, createDate, payDate, deliveryDate, 
    confirmDate, endDate, status, duration, userID
  </sql>
  <sql id="Blob_Column_List">
    mobile
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.lsh.mustardtest.pojo.OrderExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from order_
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.lsh.mustardtest.pojo.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from order_
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from order_
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order_
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.lsh.mustardtest.pojo.Order" useGeneratedKeys="true">
    insert into order_ (orderCode, address, post, 
      sender, userMessage, createDate, 
      payDate, deliveryDate, confirmDate, 
      endDate, status, duration, 
      userID, mobile)
    values (#{orderCode,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{post,jdbcType=INTEGER}, 
      #{sender,jdbcType=VARCHAR}, #{userMessage,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{payDate,jdbcType=TIMESTAMP}, #{deliveryDate,jdbcType=TIMESTAMP}, #{confirmDate,jdbcType=TIMESTAMP}, 
      #{endDate,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, #{duration,jdbcType=INTEGER}, 
      #{userID,jdbcType=INTEGER}, #{mobile,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.lsh.mustardtest.pojo.Order" useGeneratedKeys="true">
    insert into order_
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderCode != null">
        orderCode,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="post != null">
        post,
      </if>
      <if test="sender != null">
        sender,
      </if>
      <if test="userMessage != null">
        userMessage,
      </if>
      <if test="createDate != null">
        createDate,
      </if>
      <if test="payDate != null">
        payDate,
      </if>
      <if test="deliveryDate != null">
        deliveryDate,
      </if>
      <if test="confirmDate != null">
        confirmDate,
      </if>
      <if test="endDate != null">
        endDate,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="duration != null">
        duration,
      </if>
      <if test="userID != null">
        userID,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderCode != null">
        #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="post != null">
        #{post,jdbcType=INTEGER},
      </if>
      <if test="sender != null">
        #{sender,jdbcType=VARCHAR},
      </if>
      <if test="userMessage != null">
        #{userMessage,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="payDate != null">
        #{payDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deliveryDate != null">
        #{deliveryDate,jdbcType=TIMESTAMP},
      </if>
      <if test="confirmDate != null">
        #{confirmDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="duration != null">
        #{duration,jdbcType=INTEGER},
      </if>
      <if test="userID != null">
        #{userID,jdbcType=INTEGER},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lsh.mustardtest.pojo.Order">
    update order_
    <set>
      <if test="orderCode != null">
        orderCode = #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="post != null">
        post = #{post,jdbcType=INTEGER},
      </if>
      <if test="sender != null">
        sender = #{sender,jdbcType=VARCHAR},
      </if>
      <if test="userMessage != null">
        userMessage = #{userMessage,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        createDate = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="payDate != null">
        payDate = #{payDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deliveryDate != null">
        deliveryDate = #{deliveryDate,jdbcType=TIMESTAMP},
      </if>
      <if test="confirmDate != null">
        confirmDate = #{confirmDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null">
        endDate = #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="duration != null">
        duration = #{duration,jdbcType=INTEGER},
      </if>
      <if test="userID != null">
        userID = #{userID,jdbcType=INTEGER},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.lsh.mustardtest.pojo.Order">
    update order_
    set orderCode = #{orderCode,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      post = #{post,jdbcType=INTEGER},
      sender = #{sender,jdbcType=VARCHAR},
      userMessage = #{userMessage,jdbcType=VARCHAR},
      createDate = #{createDate,jdbcType=TIMESTAMP},
      payDate = #{payDate,jdbcType=TIMESTAMP},
      deliveryDate = #{deliveryDate,jdbcType=TIMESTAMP},
      confirmDate = #{confirmDate,jdbcType=TIMESTAMP},
      endDate = #{endDate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      duration = #{duration,jdbcType=INTEGER},
      userID = #{userID,jdbcType=INTEGER},
      mobile = #{mobile,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lsh.mustardtest.pojo.Order">
    update order_
    set orderCode = #{orderCode,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      post = #{post,jdbcType=INTEGER},
      sender = #{sender,jdbcType=VARCHAR},
      userMessage = #{userMessage,jdbcType=VARCHAR},
      createDate = #{createDate,jdbcType=TIMESTAMP},
      payDate = #{payDate,jdbcType=TIMESTAMP},
      deliveryDate = #{deliveryDate,jdbcType=TIMESTAMP},
      confirmDate = #{confirmDate,jdbcType=TIMESTAMP},
      endDate = #{endDate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      duration = #{duration,jdbcType=INTEGER},
      userID = #{userID,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>